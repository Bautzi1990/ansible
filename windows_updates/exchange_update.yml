---
# Start Adnova

- name: Windows Updates Exchange Server
  hosts:
    - all
  serial:
    - 1
  # strategy: free
  gather_facts: yes

  tasks:
    - name: Create a snapshot, auf Gross/Kleinschreibung des Hostnamen achten
      community.vmware.vmware_guest_snapshot:
        hostname: '{{ lookup("env", "VMWARE_HOST") }}'
        username: '{{ lookup("env", "VMWARE_USER") }}'
        password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
        validate_certs: false
        datacenter: "{{ datacenter_name }}"
        folder: /
        name: "{{ inventory_hostname_short }}"
        state: present
        snapshot_name: snap_ansible
        description: Snapshot_von_Ansible
      delegate_to: localhost  
  
  
    - name: PowerShell script Pre-Installation Exchange
      ansible.windows.win_powershell:
        script: |
          # Exchange Module laden
          Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn

          # Prüfen ob bereits im Wartungsmodus (ClusterNode not UP und keine Datenbank aktiv gemountet)
          if ((Get-ClusterNode -Name $env:Computername).state -ne "Up" -and (Get-MailboxDatabaseCopyStatus -Server $env:ComputerName | Where {$_.Status -eq "Mounted"}).Count -eq 0) {
	      Write-Host "Server $env:ComputerName befindet sich bereits im WARTUNGSMODUS" -ForegroundColor Green
	      Write-Host "Keine Änderung vorgenommen..." -ForegroundColor Green
              Exit
	  }

          # Sicherheitsfunktionen abschalten (PS-Execution-Policy und Defender)
          Write-Host "Server $env:ComputerName wir in den Wartungsmodus versetzt..."
          Write-Host "PS-Policy und Defender werden deaktiviert"
          Set-ExecutionPolicy Unrestricted -force
          Set-MpPreference -DisableRealtimeMonitoring $true
          Sleep -Seconds 3
          Write-Host "PS-Policy unrestriced und Defender deaktiviert"

          # Hub-Transport abschalten
          # Es werden keine Mails mehr angenommen
          Write-Host "Hub-Transport wird deaktiviert und Mail-Queues verschoben..."
          Set-ServerComponentState $env:ComputerName –Component HubTransport –State Draining –Requester Maintenance
          Sleep -Seconds 5

          # Bestehende Mails werden aus der Queue auf einen anderen Server verschoben
          Redirect-Message -Server $env:ComputerName -Target  -Confirm:$false
          Write-Host "Hub-Transport deaktiviert"

          # ClusterNode in Suspend-Mode
          Write-Host "ClusterNode $env:ComputerName wird angehalten"
          Suspend-ClusterNode –Name $env:ComputerName
          Sleep -Seconds 3
          Write-Host "ClusterNode $env:ComputerName angehalten"

          # Mailbox-Datenbanken verschieben und 
          Write-Host "Aktive Mailboxdatenbanken werden evakuiert"
          Set-MailboxServer $env:ComputerName –DatabaseCopyActivationDisabledAndMoveNow $true
          Set-MailboxServer $env:ComputerName –DatabaseCopyAutoActivationPolicy Blocked
          Write-Host "Skript wartet, bis Datenbanken evakuiert wurden - Prüfintervall: 30 Sekunden"
          While ((Get-MailboxDatabaseCopyStatus -Server $env:ComputerName | Where {$_.Status -eq "Mounted"}).Count -ne 0) 
          {
            Sleep -Seconds 30
          }
          Write-Host "Datenbanken wurden alle evakuiert - keine aktive Datenbankkopie mehr auf $env:ComputerName aktiv"

          # Server-Komponenten deaktivieren
          Set-ServerComponentState $env:ComputerName –Component ServerWideOffline –State InActive –Requester Maintenance
          Write-Host "Alle Server-Komponenten deaktiviert"

          # Prüfen ob im Wartungsmodus (keine aktiven Datenbanken und ClusterNode not UP)
          if ((Get-ClusterNode -Name $env:Computername).state -ne "Up" -and (Get-MailboxDatabaseCopyStatus -Server $env:ComputerName | Where {$_.Status -eq "Mounted"}).Count -eq 0) {
	      Write-Host "Server $env:ComputerName befindet sich im WARTUNGSMODUS" -ForegroundColor Green
	  }
	  else {
	      Write-Host "Server $env:ComputerName befindet sich NICHT im WARTUNGSMODUS" -ForegroundColor Red
	      Write-Host "Bitte prüfen Sie die Dienste und Befehle auf Meldungen" -ForegroundColor Red
	  }
      register: exchange


    - name: search and install updates und Logfile schreiben
      win_updates:
        category_names:
          - CriticalUpdates
          - SecurityUpdates
          - UpdateRollups
          - Updates
            #state: searched
        reboot: yes
        reboot_timeout: 1200
        log_path: c:\ansible_{{ inventory_hostname }}.txt
      register: update_result


    - name: PowerShell script Pre-Installation Exchange
      ansible.windows.win_powershell:
        script: |
          # Defender wieder aktiveren
          Set-MpPreference -DisableRealtimeMonitoring $false

          # Wartungsmodus aufheben
          Set-ServerComponentState Exchange01 –Component ServerWideOffline –State Active –Requester Maintenance
          Resume-ClusterNode –Name Exchange01
          Set-MailboxServer Exchange01 –DatabaseCopyAutoActivationPolicy Unrestricted
          Set-MailboxServer Exchange01 –DatabaseCopyActivationDisabledAndMoveNow $false
          Set-ServerComponentState Exchange01 –Component HubTransport –State Active –Requester Maintenance

          # Händische Anpassungen im ISS usw. kontrollieren
          # Spezielle Einstellungen wie Registry Werte, web.config oder Anpassungen am OWA Login Template müssen nach der Installation kontrolliert werden. 

          # Überprüfungen
          # Status der DAG prüfen
          # Mailbox Datenbanken entsprechend der Aktivierungspräferenz verteilen (geschieht bei Exchange 2016 ab CU2 automatisch)

          # Hub Transport neustarten
          Restart-Service MSExchangeTransport
      register: exchange



    - name: print variable
      debug:
        msg: '{{ update_result }}'
